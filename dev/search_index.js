var documenterSearchIndex = {"docs":
[{"location":"library/public/#Public-Documentation","page":"Public","title":"Public Documentation","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Documentation for Sawyer-Eliassen Solver's public interface.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver]\nPrivate = false\nPages = [\"SawyerEliassenSolver.jl\"]\nOrder = [:module]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.SawyerEliassenSolver","page":"Public","title":"SawyerEliassenSolver.SawyerEliassenSolver","text":"SawyerEliassenSolver.jl – Solve the Sawyer-Eliassen equation using a pseudo-spectral discretisation and 3rd order accurate implicit timestepping for arbitrary balanced background flows.\n\nExports\n\n\n\n\n\n","category":"module"},{"location":"library/public/#Grid","page":"Public","title":"Grid","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver]\nPrivate = false\nPages = [\"grid.jl\"]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.Grid","page":"Public","title":"SawyerEliassenSolver.Grid","text":"struct Grid\n\nThe physical grid. x is uniformly spaced and periodic with the left boundary at x1 and the right boundary at xNX + 1 = x1 as is standard for DFTs. z is a standard DCT/DST type II grid – uniformly spaced interior points with the boundaries at z12 and zNZ + 12.\n\nFields\n\nNX::Int64: Number of grid points in x\nNZ::Int64: Number of grid points in z\nx_bounds::Tuple{Float64, Float64}: Lower and upper x bounds: x0x1)\nz_bounds::Tuple{Float64, Float64}: Lower and upper z bounds: z0z1\nx::Vector{Float64}: Vector of x gridpoints\nz::Vector{Float64}: Vector of z gridpoints\n\n\n\n\n\n","category":"type"},{"location":"library/public/#SawyerEliassenSolver.Grid-NTuple{4, Any}","page":"Public","title":"SawyerEliassenSolver.Grid","text":"Grid(NX, NZ, x_bounds, z_bounds)\n\n\nCreate a physical Grid with (NX,NZ) points. The lateral bounds, [x0,x1) are set with a 2-tuple x_bounds or a width LX in which case x0 = 0, x1 = LX. The vertical bounds [z0,z1] are set by the 2-tuple z_bounds or a height LZ in which case z0 = -LZ, z1 = 0.\n\nExamples\n\njulia> grid = Grid(256,128,(-1000,1000),(-1,0))\nGrid:\n  ├── NX: 256\n  ├── NZ: 128\n  ├─── x: [-1000,1000)\n  └─── z: [-1,0]\n\n\n\n\n\n","category":"method"},{"location":"library/public/#SawyerEliassenSolver.Grid-Tuple{Any, Any, Any, Real}","page":"Public","title":"SawyerEliassenSolver.Grid","text":"Grid(NX, NZ, x_bounds, LZ)\n\n\nSee Grid(NX,NZ,x_bounds,z_bounds)\n\nExamples\n\njulia> grid = Grid(256,128,2000,(-1,0))\nGrid:\n  ├── NX: 256\n  ├── NZ: 128\n  ├─── x: [0,2000)\n  └─── z: [-1,0]\n\n\n\n\n\n","category":"method"},{"location":"library/public/#SawyerEliassenSolver.Grid-Tuple{Any, Any, Real, Any}","page":"Public","title":"SawyerEliassenSolver.Grid","text":"Grid(NX, NZ, LX, z_bounds)\n\n\nSee Grid(NX,NZ,x_bounds,z_bounds)\n\nExamples\n\njulia> grid = Grid(256,128,(-1000,1000),1)\nGrid:\n  ├── NX: 256\n  ├── NZ: 128\n  ├─── x: [-1000,1000)\n  └─── z: [-1,0]\n\n\n\n\n\n","category":"method"},{"location":"library/public/#SawyerEliassenSolver.Grid-Tuple{Any, Any, Real, Real}","page":"Public","title":"SawyerEliassenSolver.Grid","text":"Grid(NX, NZ, LX, LZ)\n\n\nSee Grid(NX,NZ,x_bounds,z_bounds)\n\nExamples\n\njulia> grid = Grid(256,128,2000,1)\nGrid:\n  ├── NX: 256\n  ├── NZ: 128\n  ├─── x: [0,2000)\n  └─── z: [-1,0]\n\n\n\n\n\n","category":"method"},{"location":"library/public/#Background-Flow","page":"Public","title":"Background Flow","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver]\nPrivate = false\nPages = [\"background.jl\"]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.BackgroundFlow","page":"Public","title":"SawyerEliassenSolver.BackgroundFlow","text":"struct BackgroundFlow\n\nThe balanced background gradients. The background flow is in thermal wind balance and therefore assumed to be steady.\n\nFields\n\nf::Float64: Coriolis frequency f\nVx::Matrix{Float64}: Lateral shear partial Vpartial x\nBx::Matrix{Float64}: Horizontal buoyancy gradient partial Bpartial x = fpartial Vpartial z\nBz::Matrix{Float64}: Vertical buoyancy gradient partial Bpartial z\n\n\n\n\n\n","category":"type"},{"location":"library/public/#SawyerEliassenSolver.BackgroundFlow-2","page":"Public","title":"SawyerEliassenSolver.BackgroundFlow","text":"BackgroundFlow(grid::Grid) -> BackgroundFlow\nBackgroundFlow(grid::Grid, f::Float64) -> BackgroundFlow\n\n\nCreate a new BackgroundFlow given a Grid and Coriolis frequency f which defaults to 1. Background gradients are initialised to 0.\n\nExamples\n\ngrid = Grid(256,128,2000,1)\nbg = BackgroundFlow(grid)\n\n# output\nBackgroundFlow:\n  ├─── f: 1\n  ├── Vx: 256×128 Matrix{Float64}\n  │       [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]\n  ├── Bx: 256×128 Matrix{Float64}\n  │       [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]\n  └── Bz: 256×128 Matrix{Float64}\n          [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0]\n\n\n\n\n\n","category":"type"},{"location":"library/public/#Problem","page":"Public","title":"Problem","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver]\nPrivate = false\nPages = [\"problem.jl\"]","category":"page"},{"location":"library/public/#Timestepper","page":"Public","title":"Timestepper","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver]\nPrivate = false\nPages = [\"timestepper.jl\"]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.Timestepper!-Tuple{Int64}","page":"Public","title":"SawyerEliassenSolver.Timestepper!","text":"Advance the state n timesteps\n\n\n\n\n\n","category":"method"},{"location":"library/public/#SawyerEliassenSolver.Timestepper!-Tuple{}","page":"Public","title":"SawyerEliassenSolver.Timestepper!","text":"Advance the state one timestep using the DIRKN scheme\n\n\n\n\n\n","category":"method"},{"location":"library/public/#Tools","page":"Public","title":"Tools","text":"","category":"section"},{"location":"library/public/#Output-Writer","page":"Public","title":"Output Writer","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver.Tools]\nPrivate = false\nPages = [\"Tools/output_writer.jl\"]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.Tools.write_attribute-Tuple{SawyerEliassenSolver.Tools.OutputWriter, Vararg{Pair{String}}}","page":"Public","title":"SawyerEliassenSolver.Tools.write_attribute","text":"Thin wrapper around HDF5.write_attribute\n\n\n\n\n\n","category":"method"},{"location":"library/public/#Wall-Time-Stop","page":"Public","title":"Wall Time Stop","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver.Tools]\nPrivate = false\nPages = [\"Tools/wall_time_stop.jl\"]","category":"page"},{"location":"library/public/#Initial-Conditions","page":"Public","title":"Initial Conditions","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Modules = [SawyerEliassenSolver.Tools]\nPrivate = false\nPages = [\"Tools/initial_conditions.jl\"]","category":"page"},{"location":"library/public/#SawyerEliassenSolver.Tools.set_ψt!-Tuple{State, Problem}","page":"Public","title":"SawyerEliassenSolver.Tools.set_ψt!","text":"Compute ψt in spectral space from b and v in physical space\n\n\n\n\n\n","category":"method"},{"location":"examples/variably_stratified_frontal_zone/#Variably-Stratified-Frontal-Zone","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"","category":"section"},{"location":"examples/variably_stratified_frontal_zone/#Background-Flow","page":"Variably Stratified Frontal Zone","title":"Background Flow","text":"","category":"section"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"beginaligned\n    V_x = 0 \n    B_x = fV_z = Gamma f^2  \n    B_z = leftPi_0^2 + left(Pi_infty^2 - Pi_0^2right)frac11 + mathrme^z + Drightf^2\nendaligned","category":"page"},{"location":"examples/variably_stratified_frontal_zone/#Initial-Conditions","page":"Variably Stratified Frontal Zone","title":"Initial Conditions","text":"","category":"section"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"The streamfunction is specified as a wavepacket of the form","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"psi = Acos(kx + mz -omega t)","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"where A is a slowly varying amplitude that is neglected when constructing the initial conditions. The initial amplitude is","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"A(xz) = mathrme^-(lambda_x^2(x - x_0)^2 + lambda_z^2(z - z_0))2","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"The wavepacket is initialised in the top part of the domain where B_z = Pi_0^2f^2. k and m are chosen such that the wave has frequency omega = frac1sqrt2f. That is ","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"fracmk = fracGamma pm sqrtGamma^2 - left(Pi_0^2 - f^-2omega^2right)left(1 - f^-2omega^2right)left(1 - f^-2omega^2right)","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"Given the streamfunction we can compute u, w, v, and b by","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"beginaligned\n    u = -psi_z = mAsin(kx + mz - omega t)  \n    w = psi_x = -kAsin(kx + mz - omega t)  \n    v_t = -u(f + V_x) - wV_z implies v = leftfracfGamma komega - fracfmomegarightAcos(kx + mz - omega t)  \n    b_t = -uB_x - wB_z implies b = leftfracf^2Pi_0^2 komega - fracf^2Gamma momegarightAcos(kx + mz - omega t)\nendaligned","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"psi_t is then computed from the thermal wind imbalance","category":"page"},{"location":"examples/variably_stratified_frontal_zone/","page":"Variably Stratified Frontal Zone","title":"Variably Stratified Frontal Zone","text":"psi_t = left(fracpartial^2partial x^2 + fracpartial^2partial z^2right)^-1left(b_x - fv_zright)","category":"page"},{"location":"library/internals/#Internal-Documentation","page":"Internals","title":"Internal Documentation","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"Documentation for Sawyer-Eliassen Solver's internal workings.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SawyerEliassenSolver","category":"page"},{"location":"#SawyerEliassenSolver","page":"Home","title":"SawyerEliassenSolver","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SawyerEliassenSolver.","category":"page"},{"location":"examples/baroclinic_vorticity_filament/#Baroclinic-Vorticity-Filament","page":"Baroclinic Vorticity Filament","title":"Baroclinic Vorticity Filament","text":"","category":"section"},{"location":"examples/barotropic_niws/#Barotropic-NIWs","page":"Barotropic NIWs","title":"Barotropic NIWs","text":"","category":"section"}]
}
